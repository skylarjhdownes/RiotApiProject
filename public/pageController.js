// Generated by CoffeeScript 1.10.0
var app;

app = angular.module('potatoApp', []);

app.controller('potatoController', function($scope, $http) {
  var attachChampionsToMatches, attachMatchDataToMatchlist, determineWhetherSummonerHasPlayedMoreGamesAsMeleeOrRanged, determineWhetherSummonerPrefersMeleeOrRanged, getChampionByChampId;
  $scope.summoner = {};
  $scope.summonerMatchlist = {};
  $scope.summonerNameInput = '';
  getChampionByChampId = function(id) {
    return _.find($scope.champions, "id", id);
  };
  attachChampionsToMatches = function(matches) {
    var i, len, match, ref, results;
    ref = $scope.summonerMatchlist.matches;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      match = ref[i];
      results.push(match.champion = getChampionByChampId(match.champion));
    }
    return results;
  };
  determineWhetherSummonerHasPlayedMoreGamesAsMeleeOrRanged = function(matches) {
    var i, len, match, meleeRangedGames;
    meleeRangedGames = {
      ranged: 0,
      melee: 0
    };
    for (i = 0, len = matches.length; i < len; i++) {
      match = matches[i];
      if (match.champion.stats.attackrange < 200) {
        meleeRangedGames.melee++;
      } else {
        meleeRangedGames.ranged++;
      }
    }
    return meleeRangedGames;
  };
  determineWhetherSummonerPrefersMeleeOrRanged = function(meleeRangedGames) {
    if (meleeRangedGames.ranged > meleeRangedGames.melee) {
      return $scope.meleeRangedPreference = "ranged";
    } else if (meleeRangedGames.ranged < meleeRangedGames.melee) {
      return $scope.meleeRangedPreference = "melee";
    } else {
      return $scope.meleeRangedPreference = "neither ranged nor melee";
    }
  };
  attachMatchDataToMatchlist = function(matches) {
    var doTheThing, i, index, len, match, results;
    doTheThing = function(match, index) {
      return $http.get("/matchDetailsById/" + match.matchId).then(function(response) {
        return $scope.summonerMatchlist.matches[index].matchData = response.data;
      });
    };
    results = [];
    for (index = i = 0, len = matches.length; i < len; index = ++i) {
      match = matches[index];
      results.push(doTheThing(match, index));
    }
    return results;
  };
  return $scope.getSummonerData = function() {
    $http.get("/championData").then(function(response) {
      return $scope.champions = response.data.data;
    });
    return $http.get("/summonerInfoByName/" + $scope.summonerNameInput).then(function(response) {
      $scope.summoner = response.data[$scope.summonerNameInput.toLowerCase()];
      return $http.get("/summonerMatchlistById/" + $scope.summoner.id).then(function(response) {
        var meleeRangedGames;
        $scope.summonerMatchlist = response.data;
        $scope.summonerMatchlistLength = Object.keys($scope.summonerMatchlist);
        attachChampionsToMatches($scope.summonerMatchlist);
        meleeRangedGames = determineWhetherSummonerHasPlayedMoreGamesAsMeleeOrRanged($scope.summonerMatchlist.matches);
        determineWhetherSummonerPrefersMeleeOrRanged(meleeRangedGames);
        return attachMatchDataToMatchlist($scope.summonerMatchlist.matches);
      });
    });
  };
});
