// Generated by CoffeeScript 1.10.0
var app, express, leagueApiClient, leagueApiWrapper, port, request, server;

express = require('express');

request = require('request');

leagueApiWrapper = require('lol-js');

leagueApiClient = leagueApiWrapper.client({
  apiKey: 'nope',
  defaultRegion: 'na',
  cache: leagueApiWrapper.lruCache({
    max: 2000
  })
});

app = express();

app.use('/', express["static"]('public'));

app.use('/modules', express["static"]('node_modules'));

app.get('/summonerInfoByName/:name', function(httpRequest, httpResponse) {
  return leagueApiClient.getSummonersByNameAsync([httpRequest.params.name], {}).then(function(response) {
    return httpResponse.send(response);
  });
});

app.get('/summonerStatsById/:id', function(httpRequest, httpResponse) {
  return leagueApiClient.getSummonersByIdAsync([httpRequest.params.id], {}).then(function(response) {
    return httpResponse.send(response);
  });
});

app.get('/summonerMatchListById/:id', function(httpRequest, httpResponse) {
  return leagueApiClient.getMatchHistoryForSummonerAsync([httpRequest.params.id], {}).then(function(response) {
    return httpResponse.send(response);
  });
});

app.get('/championDataById/:id', function(httpRequest, httpResponse) {
  return leagueApiClient.getChampionByIdAsync([httpRequest.params.id], {}).then(function(response) {
    return httpResponse.send(response);
  });
});

app.get('/championData', function(httpRequest, httpResponse) {
  return leagueApiClient.getChampionsAsync({
    champData: 'stats',
    'image': 'image'
  }).then(function(response) {
    return httpResponse.send(response);
  });
});

app.get('/matchDetailsById/:id', function(httpRequest, httpResponse) {
  return leagueApiClient.getMatchAsync([httpRequest.params.id], {}).then(function(response) {
    return httpResponse.send(response);
  });
});

port = 4000;

server = app.listen(port);

console.log('Listening on port ' + port);
